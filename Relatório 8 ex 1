# Classe base
class Personagem:
    def __init__(self, vida, resistencia):
        self._vida = vida
        self._resistencia = resistencia

    # Getter e Setter controlados para vida
    @property
    def vida(self):
        return self._vida

    @vida.setter
    def vida(self, nova_vida):
        if nova_vida < 0:
            self._vida = 0
        else:
            self._vida = nova_vida

    def __str__(self):
        return f"Personagem com {self._vida} de vida e {self._resistencia} de resistência"


# Classe filha
class Cavaleiro(Personagem):
    def __init__(self, vida, resistencia, armadura_pesada):
        super().__init__(vida, resistencia)
        self.armadura_pesada = armadura_pesada  # atributo exclusivo

    def __str__(self):
        estado_armadura = "com armadura pesada" if self.armadura_pesada else "sem armadura pesada"
        return f"Cavaleiro {estado_armadura}, com {self._vida} de vida e {self._resistencia} de resistência"


# Exemplos de uso:
if __name__ == "__main__":
    p1 = Personagem(100, 50)
    print(p1)

    c1 = Cavaleiro(150, 80, True)
    print(c1)

    # Testando setter
    c1.vida = -10
    print(c1)
